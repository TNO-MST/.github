name: "Build & Publish to Maven Central"
on:
  workflow_call:
    inputs:
      java_version:
        type: string
        default: "21"
      package_dir:
        type: string
        default: "./"
      version_string_substitutions:
        type: string
        default: "" # Space-separated list of files
      build_date_substitutions:
        type: string
        default: "" # Space-separated list of files
      install_linux_libraries:
        type: string
        default: "" # Space-separated apt packages
    secrets:
      # Maven Central (OSSRH) credentials + GPG
      MAVEN_CENTRAL_USERNAME:
        required: true
      MAVEN_CENTRAL_PASSWORD:
        required: true
      MAVEN_GPG_PRIVATE_KEY:
        required: true # ASCII-armored private key
      MAVEN_GPG_PASSPHRASE:
        required: true

jobs:
  # 1) Reuse the build workflow to ensure code compiles, tests pass, and jars are produced.
  build:
    uses: TNO-MST/.github/.github/workflows/build-maven-package-with-version.yml@main
    with:
      java_version: ${{ inputs.java_version }}
      package_dir: ${{ inputs.package_dir }}
      version_string_substitutions: ${{ inputs.version_string_substitutions }}
      build_date_substitutions: ${{ inputs.build_date_substitutions }}
      install_linux_libraries: ${{ inputs.install_linux_libraries }}
    secrets: inherit

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    env:
      PKG_DIR: ${{ inputs.package_dir }}
    steps:
      - name: Checkout (full history + tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java_version }}
          distribution: temurin
          cache: maven
          server-id: central
          server-username: MAVEN_CENTRAL_USERNAME
          server-password: MAVEN_CENTRAL_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Change to package directory
        shell: bash
        run: |
          cd "$PKG_DIR"
          echo "Package directory: $(pwd)"

      - name: Align project version to build output
        env:
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          cd "$PKG_DIR"
          echo "Publishing VERSION=$VERSION"
          mvn -B versions:set -DnewVersion="$VERSION" -DprocessAllModules=true

      - name: Substitute version string in specified files
        if: ${{ inputs.version_string_substitutions != '' }}
        shell: bash
        run: |
          cd "$PKG_DIR"
          for file in $VERSION_FILES; do
            echo "Updating version placeholders in: $file"
            sed -i "s/0.0.0-git/${VERSION}/g" "$file"
          done

      - name: Substitute build date in specified files
        if: ${{ inputs.build_date_substitutions != '' }}
        shell: bash
        run: |
          cd "$PKG_DIR"
          NOW="$(date +"%Y-%m-%d %T")"
          echo "Setting build date to: $NOW"
          for file in $DATE_FILES; do
            echo "Updating build date in: $file"
            sed -i "s/UNKNOWN_BUILD_DATE/${NOW}/g" "$file"
          done

      - name: Optionally install extra Linux libraries (Ubuntu/Debian)
        if: ${{ inputs.install_linux_libraries != '' }}
        shell: bash
        run: |
          echo "Installing additional libraries: $EXTRA_LIBS"
          sudo apt-get update
          sudo apt-get install -y $EXTRA_LIBS

      - name: Publish package
        run: mvn -B deploy
        working-directory: ${{ inputs.package_dir }}
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
